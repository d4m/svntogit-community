# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: Luca Weiss <luca (at) z3ntu (dot) xyz>
# Contributor: Julian Schacher <jspp@posteo.net>

pkgbase=riot
pkgname=('riot-web' 'riot-desktop')
pkgver=1.5.15
pkgrel=1
pkgdesc="A glossy Matrix collaboration client, web and desktop versions."
arch=(x86_64)
url="https://riot.im"
license=(Apache)
makedepends=(npm git yarn python rust sqlcipher electron)
_url="https://github.com/vector-im/riot-web"
source=(${pkgbase}-${pkgver}.tar.gz::${_url}/archive/v${pkgver}.tar.gz
        ${pkgbase}-${pkgver}.tar.gz.asc::${_url}/releases/download/v${pkgver}/v${pkgver}-src.tar.gz.asc
        ${pkgbase}.desktop
        ${pkgbase}-desktop.sh)
sha256sums=('3d5512f842fa436aef00b1b1f1c5ced4a4f1adc5cc1bcfddbc77573387f9cc42'
            'SKIP'
            'fa1a6756280c678e2193930adbd98c7721071278700e17a0db38de1668365091'
            'dc14c79694bac4f523493c26a73c8000f9a2374f36dd21c1945bfb93d19277cd')
validpgpkeys=(A878CDF66CF4A9B4807CEBE574692659BDA3D940) # Riot Releases <releases@riot.im>

prepare() {
  cd ${pkgbase}-web-${pkgver}
  sed -i 's@https://riot.im/download/desktop/update/@null@g' electron_app/riot.im/config.json
  sed -i 's/"target": "deb"/"target": "dir"/g' package.json
  yarn install

  # Add the matrix-seshat package (which is needed for search in E2E encrypted
  # rooms) as well as the electron-build-env package, which gets used later to
  # rebuild the native libraries against electronâ€™s version of node.
  # See here for more information:
  # https://github.com/vector-im/riot-web/blob/develop/docs/native-node-modules.md#adding-seshat-for-search-in-e2e-encrypted-rooms
  cd electron_app
  yarn add matrix-seshat
  yarn add electron-build-env
  # Finally also enable the event indexing feature in the config.
  sed 's/"features": {/"features": {\n        "feature_event_indexing": "enable",/' riot.im/config.json
}

build() {
  cd ${pkgbase}-web-${pkgver}/electron_app
  # Recompile matrix-seshat
  yarn run electron-build-env -- --electron $(cat /usr/lib/electron/version) -- neon build matrix-seshat --release

  cd ..
  # Do the actual build
  yarn build:electron:linux
}

package_riot-web() {
  pkgdesc="A glossy Matrix collaboration client for the web."
  provides=(vector-web)
  replaces=(vector-web)

  cd ${pkgbase}-web-${pkgver}

  install -d "${pkgdir}"/{usr/share/webapps,etc/webapps}/${pkgbase}

  cp -r webapp/* "${pkgdir}"/usr/share/webapps/${pkgbase}/
  install -Dm644 config.sample.json -t "${pkgdir}"/etc/webapps/${pkgbase}/
  ln -s /etc/webapps/${pkgbase}/config.json "${pkgdir}"/usr/share/webapps/${pkgbase}/
  echo "${pkgver}" > "${pkgdir}"/usr/share/webapps/${pkgbase}/version
}

package_riot-desktop() {
  pkgdesc="A glossy Matrix collaboration client for the desktop."
  depends=(riot-web electron sqlcipher)
  backup=('etc/riot/config.json')

  cd ${pkgbase}-web-${pkgver}

  install -d "${pkgdir}"{/usr/lib/${pkgbase}/,/etc/webapps/${pkgbase}}

  # Install the app content, replace the webapp with a symlink to the system package
  cp -r electron_app/dist/linux-unpacked/resources/* "${pkgdir}"/usr/lib/${pkgbase}/
  rm -r "${pkgdir}"/usr/lib/${pkgbase}/webapp
  ln -s /usr/share/webapps/${pkgbase} "${pkgdir}"/usr/lib/${pkgbase}/webapp

  # Remove cruft from seshat build
  for item in Cargo.lock Cargo.toml artifacts.json build.rs src target ; do
    rm -r "${pkgdir}"/usr/lib/${pkgbase}/app.asar.unpacked/node_modules/matrix-seshat/native/${item}
  done

  # Config file
  ln -s /etc/${pkgbase}/config.json "${pkgdir}"/etc/webapps/${pkgbase}/config.json
  install -Dm644 electron_app/riot.im/config.json -t "${pkgdir}"/etc/${pkgbase}

  # Required extras
  install -Dm644 "${srcdir}"/${pkgbase}.desktop "${pkgdir}"/usr/share/applications/${pkgbase}.desktop
  install -Dm755 "${srcdir}"/${pkgname}.sh "${pkgdir}"/usr/bin/${pkgname}

  # Icons
  install -Dm644 res/themes/riot/img/logos/riot-im-logo.svg "${pkgdir}"/usr/share/icons/hicolor/scalable/apps/${pkgbase}.svg
  for i in 16 24 48 64 96 128 256 512; do
    install -Dm644 electron_app/build/icons/${i}x${i}.png "${pkgdir}"/usr/share/icons/hicolor/${i}x${i}/apps/${pkgbase}.png
  done
}
